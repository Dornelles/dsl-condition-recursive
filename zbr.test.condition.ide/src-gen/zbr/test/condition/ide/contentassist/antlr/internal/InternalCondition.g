/*
 * generated by Xtext 2.28.0
 */
grammar InternalCondition;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package zbr.test.condition.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package zbr.test.condition.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import zbr.test.condition.services.ConditionGrammarAccess;

}
@parser::members {
	private ConditionGrammarAccess grammarAccess;

	public void setGrammarAccess(ConditionGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)*
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
		(rule__ConditionalExpression__Group__0)
		{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOpeartor
entryRuleLogicalOpeartor
:
{ before(grammarAccess.getLogicalOpeartorRule()); }
	 ruleLogicalOpeartor
{ after(grammarAccess.getLogicalOpeartorRule()); } 
	 EOF 
;

// Rule LogicalOpeartor
ruleLogicalOpeartor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOpeartorAccess().getAlternatives()); }
		(rule__LogicalOpeartor__Alternatives)
		{ after(grammarAccess.getLogicalOpeartorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getCompositeConditionParserRuleCall()); }
		ruleCompositeCondition
		{ after(grammarAccess.getConditionAccess().getCompositeConditionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeCondition
entryRuleCompositeCondition
:
{ before(grammarAccess.getCompositeConditionRule()); }
	 ruleCompositeCondition
{ after(grammarAccess.getCompositeConditionRule()); } 
	 EOF 
;

// Rule CompositeCondition
ruleCompositeCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getGroup()); }
		(rule__CompositeCondition__Group__0)
		{ after(grammarAccess.getCompositeConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegation
entryRuleNegation
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationAccess().getAlternatives()); }
		(rule__Negation__Alternatives)
		{ after(grammarAccess.getNegationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getAlternatives()); }
		(rule__Term__Alternatives)
		{ after(grammarAccess.getTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeInterval
entryRuleTimeInterval
:
{ before(grammarAccess.getTimeIntervalRule()); }
	 ruleTimeInterval
{ after(grammarAccess.getTimeIntervalRule()); } 
	 EOF 
;

// Rule TimeInterval
ruleTimeInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeIntervalAccess().getGroup()); }
		(rule__TimeInterval__Group__0)
		{ after(grammarAccess.getTimeIntervalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSessionInterval
entryRuleSessionInterval
:
{ before(grammarAccess.getSessionIntervalRule()); }
	 ruleSessionInterval
{ after(grammarAccess.getSessionIntervalRule()); } 
	 EOF 
;

// Rule SessionInterval
ruleSessionInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getAlternatives()); }
		(rule__SessionInterval__Alternatives)
		{ after(grammarAccess.getSessionIntervalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeout
entryRuleTimeout
:
{ before(grammarAccess.getTimeoutRule()); }
	 ruleTimeout
{ after(grammarAccess.getTimeoutRule()); } 
	 EOF 
;

// Rule Timeout
ruleTimeout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeoutAccess().getGroup()); }
		(rule__Timeout__Group__0)
		{ after(grammarAccess.getTimeoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxNumberOfOperation
entryRuleMaxNumberOfOperation
:
{ before(grammarAccess.getMaxNumberOfOperationRule()); }
	 ruleMaxNumberOfOperation
{ after(grammarAccess.getMaxNumberOfOperationRule()); } 
	 EOF 
;

// Rule MaxNumberOfOperation
ruleMaxNumberOfOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxNumberOfOperationAccess().getGroup()); }
		(rule__MaxNumberOfOperation__Group__0)
		{ after(grammarAccess.getMaxNumberOfOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWeekDaysInterval
entryRuleWeekDaysInterval
:
{ before(grammarAccess.getWeekDaysIntervalRule()); }
	 ruleWeekDaysInterval
{ after(grammarAccess.getWeekDaysIntervalRule()); } 
	 EOF 
;

// Rule WeekDaysInterval
ruleWeekDaysInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWeekDaysIntervalAccess().getGroup()); }
		(rule__WeekDaysInterval__Group__0)
		{ after(grammarAccess.getWeekDaysIntervalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessageContent
entryRuleMessageContent
:
{ before(grammarAccess.getMessageContentRule()); }
	 ruleMessageContent
{ after(grammarAccess.getMessageContentRule()); } 
	 EOF 
;

// Rule MessageContent
ruleMessageContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageContentAccess().getAlternatives()); }
		(rule__MessageContent__Alternatives)
		{ after(grammarAccess.getMessageContentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonOperator
entryRuleComparisonOperator
:
{ before(grammarAccess.getComparisonOperatorRule()); }
	 ruleComparisonOperator
{ after(grammarAccess.getComparisonOperatorRule()); } 
	 EOF 
;

// Rule ComparisonOperator
ruleComparisonOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
		(rule__ComparisonOperator__Alternatives)
		{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WeekDay
ruleWeekDay
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeekDayAccess().getAlternatives()); }
		(rule__WeekDay__Alternatives)
		{ after(grammarAccess.getWeekDayAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeUnit
ruleTimeUnit
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getAlternatives()); }
		(rule__TimeUnit__Alternatives)
		{ after(grammarAccess.getTimeUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConditionAssignment_0()); }
		(rule__Model__ConditionAssignment_0)
		{ after(grammarAccess.getModelAccess().getConditionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getConditionalExpressionAssignment_1()); }
		(rule__Model__ConditionalExpressionAssignment_1)
		{ after(grammarAccess.getModelAccess().getConditionalExpressionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOpeartor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOpeartorAccess().getSymbolAssignment_0()); }
		(rule__LogicalOpeartor__SymbolAssignment_0)
		{ after(grammarAccess.getLogicalOpeartorAccess().getSymbolAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOpeartorAccess().getSymbolAssignment_1()); }
		(rule__LogicalOpeartor__SymbolAssignment_1)
		{ after(grammarAccess.getLogicalOpeartorAccess().getSymbolAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getSymbolAssignment_1_1_0()); }
		(rule__CompositeCondition__SymbolAssignment_1_1_0)
		{ after(grammarAccess.getCompositeConditionAccess().getSymbolAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositeConditionAccess().getSymbolAssignment_1_1_1()); }
		(rule__CompositeCondition__SymbolAssignment_1_1_1)
		{ after(grammarAccess.getCompositeConditionAccess().getSymbolAssignment_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getNegationAccess().getTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNegationAccess().getGroup_1()); }
		(rule__Negation__Group_1__0)
		{ after(grammarAccess.getNegationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getGroup_0()); }
		(rule__Term__Group_0__0)
		{ after(grammarAccess.getTermAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getSessionIntervalParserRuleCall_1()); }
		ruleSessionInterval
		{ after(grammarAccess.getTermAccess().getSessionIntervalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getWeekDaysIntervalParserRuleCall_2()); }
		ruleWeekDaysInterval
		{ after(grammarAccess.getTermAccess().getWeekDaysIntervalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getTimeIntervalParserRuleCall_3()); }
		ruleTimeInterval
		{ after(grammarAccess.getTermAccess().getTimeIntervalParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getTimeoutParserRuleCall_4()); }
		ruleTimeout
		{ after(grammarAccess.getTermAccess().getTimeoutParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getMaxNumberOfOperationParserRuleCall_5()); }
		ruleMaxNumberOfOperation
		{ after(grammarAccess.getTermAccess().getMaxNumberOfOperationParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getMessageContentParserRuleCall_6()); }
		ruleMessageContent
		{ after(grammarAccess.getTermAccess().getMessageContentParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getGroup_0()); }
		(rule__SessionInterval__Group_0__0)
		{ after(grammarAccess.getSessionIntervalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSessionIntervalAccess().getGroup_1()); }
		(rule__SessionInterval__Group_1__0)
		{ after(grammarAccess.getSessionIntervalAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSessionIntervalAccess().getGroup_2()); }
		(rule__SessionInterval__Group_2__0)
		{ after(grammarAccess.getSessionIntervalAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getGroup_0()); }
		(rule__MessageContent__Group_0__0)
		{ after(grammarAccess.getMessageContentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMessageContentAccess().getGroup_1()); }
		(rule__MessageContent__Group_1__0)
		{ after(grammarAccess.getMessageContentAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMessageContentAccess().getGroup_2()); }
		(rule__MessageContent__Group_2__0)
		{ after(grammarAccess.getMessageContentAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getMessageContentAccess().getGroup_3()); }
		(rule__MessageContent__Group_3__0)
		{ after(grammarAccess.getMessageContentAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_0()); }
		(rule__ComparisonOperator__SymbolAssignment_0)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_1()); }
		(rule__ComparisonOperator__SymbolAssignment_1)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_2()); }
		(rule__ComparisonOperator__SymbolAssignment_2)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_3()); }
		(rule__ComparisonOperator__SymbolAssignment_3)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_4()); }
		(rule__ComparisonOperator__SymbolAssignment_4)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_5()); }
		(rule__ComparisonOperator__SymbolAssignment_5)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDay__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeekDayAccess().getSUNDAYEnumLiteralDeclaration_0()); }
		('Sunday')
		{ after(grammarAccess.getWeekDayAccess().getSUNDAYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getMONDAYEnumLiteralDeclaration_1()); }
		('Monday')
		{ after(grammarAccess.getWeekDayAccess().getMONDAYEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getTUESDAYEnumLiteralDeclaration_2()); }
		('Tuesday')
		{ after(grammarAccess.getWeekDayAccess().getTUESDAYEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getWEDNESDAYEnumLiteralDeclaration_3()); }
		('Wednesday')
		{ after(grammarAccess.getWeekDayAccess().getWEDNESDAYEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getTHURSDAYEnumLiteralDeclaration_4()); }
		('Thursday')
		{ after(grammarAccess.getWeekDayAccess().getTHURSDAYEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getFRIDAYEnumLiteralDeclaration_5()); }
		('Friday')
		{ after(grammarAccess.getWeekDayAccess().getFRIDAYEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getSATURDAYEnumLiteralDeclaration_6()); }
		('Saturday')
		{ after(grammarAccess.getWeekDayAccess().getSATURDAYEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getSECONDEnumLiteralDeclaration_0()); }
		('Second')
		{ after(grammarAccess.getTimeUnitAccess().getSECONDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_1()); }
		('Minute')
		{ after(grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_2()); }
		('Hour')
		{ after(grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_3()); }
		('Day')
		{ after(grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_4()); }
		('Week')
		{ after(grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getMONTHEnumLiteralDeclaration_5()); }
		('Month')
		{ after(grammarAccess.getTimeUnitAccess().getMONTHEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getYEAREnumLiteralDeclaration_6()); }
		('Year')
		{ after(grammarAccess.getTimeUnitAccess().getYEAREnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getBeforeSymbolAssignment_0()); }
	(rule__ConditionalExpression__BeforeSymbolAssignment_0)?
	{ after(grammarAccess.getConditionalExpressionAccess().getBeforeSymbolAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__1__Impl
	rule__ConditionalExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getWhenKeyword_1()); }
	'when'
	{ after(grammarAccess.getConditionalExpressionAccess().getWhenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__2__Impl
	rule__ConditionalExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getConditionalExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__3__Impl
	rule__ConditionalExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getConditionParamAssignment_3()); }
	(rule__ConditionalExpression__ConditionParamAssignment_3)
	{ after(grammarAccess.getConditionalExpressionAccess().getConditionParamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__4__Impl
	rule__ConditionalExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConditionalExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__5__Impl
	rule__ConditionalExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getDoKeyword_5()); }
	'do'
	{ after(grammarAccess.getConditionalExpressionAccess().getDoKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__6__Impl
	rule__ConditionalExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getConditionalExpressionAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__7__Impl
	rule__ConditionalExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_7()); }
	(rule__ConditionalExpression__ConditionAssignment_7)
	{ after(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__8__Impl
	rule__ConditionalExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getConditionalExpressionAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getAftetrSymbolAssignment_9()); }
	(rule__ConditionalExpression__AftetrSymbolAssignment_9)?
	{ after(grammarAccess.getConditionalExpressionAccess().getAftetrSymbolAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__0__Impl
	rule__CompositeCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getNegationParserRuleCall_0()); }
	ruleNegation
	{ after(grammarAccess.getCompositeConditionAccess().getNegationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getGroup_1()); }
	(rule__CompositeCondition__Group_1__0)*
	{ after(grammarAccess.getCompositeConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group_1__0__Impl
	rule__CompositeCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getBinaryTermOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCompositeConditionAccess().getBinaryTermOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group_1__1__Impl
	rule__CompositeCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getAlternatives_1_1()); }
	(rule__CompositeCondition__Alternatives_1_1)
	{ after(grammarAccess.getCompositeConditionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getRightAssignment_1_2()); }
	(rule__CompositeCondition__RightAssignment_1_2)
	{ after(grammarAccess.getCompositeConditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__0__Impl
	rule__Negation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getUnaryTermOperatorAction_1_0()); }
	()
	{ after(grammarAccess.getNegationAccess().getUnaryTermOperatorAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__1__Impl
	rule__Negation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getSymbolAssignment_1_1()); }
	(rule__Negation__SymbolAssignment_1_1)
	{ after(grammarAccess.getNegationAccess().getSymbolAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getConditionAssignment_1_2()); }
	(rule__Negation__ConditionAssignment_1_2)
	{ after(grammarAccess.getNegationAccess().getConditionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__0__Impl
	rule__Term__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getTermAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__1__Impl
	rule__Term__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getConditionParserRuleCall_0_1()); }
	ruleCondition
	{ after(grammarAccess.getTermAccess().getConditionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getTermAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeInterval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeInterval__Group__0__Impl
	rule__TimeInterval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeIntervalAccess().getTimeIntervalKeyword_0()); }
	'TimeInterval'
	{ after(grammarAccess.getTimeIntervalAccess().getTimeIntervalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeInterval__Group__1__Impl
	rule__TimeInterval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeIntervalAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTimeIntervalAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeInterval__Group__2__Impl
	rule__TimeInterval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeIntervalAccess().getStartAssignment_2()); }
	(rule__TimeInterval__StartAssignment_2)
	{ after(grammarAccess.getTimeIntervalAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeInterval__Group__3__Impl
	rule__TimeInterval__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeIntervalAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getTimeIntervalAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeInterval__Group__4__Impl
	rule__TimeInterval__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeIntervalAccess().getEndAssignment_4()); }
	(rule__TimeInterval__EndAssignment_4)
	{ after(grammarAccess.getTimeIntervalAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeInterval__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeIntervalAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getTimeIntervalAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SessionInterval__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0__0__Impl
	rule__SessionInterval__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getGroup_0_0()); }
	(rule__SessionInterval__Group_0_0__0)
	{ after(grammarAccess.getSessionIntervalAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getRightParenthesisKeyword_0_1()); }
	')'
	{ after(grammarAccess.getSessionIntervalAccess().getRightParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SessionInterval__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0_0__0__Impl
	rule__SessionInterval__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getSessionIntervalKeyword_0_0_0()); }
	'SessionInterval'
	{ after(grammarAccess.getSessionIntervalAccess().getSessionIntervalKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0_0__1__Impl
	rule__SessionInterval__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getLeftParenthesisKeyword_0_0_1()); }
	'('
	{ after(grammarAccess.getSessionIntervalAccess().getLeftParenthesisKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0_0__2__Impl
	rule__SessionInterval__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getFrequencyAssignment_0_0_2()); }
	(rule__SessionInterval__FrequencyAssignment_0_0_2)
	{ after(grammarAccess.getSessionIntervalAccess().getFrequencyAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0_0__3__Impl
	rule__SessionInterval__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getTimeUnitAssignment_0_0_3()); }
	(rule__SessionInterval__TimeUnitAssignment_0_0_3)
	{ after(grammarAccess.getSessionIntervalAccess().getTimeUnitAssignment_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0_0__4__Impl
	rule__SessionInterval__Group_0_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getByKeyword_0_0_4()); }
	'by'
	{ after(grammarAccess.getSessionIntervalAccess().getByKeyword_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_0_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_0_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getMessagecontentAssignment_0_0_5()); }
	(rule__SessionInterval__MessagecontentAssignment_0_0_5)
	{ after(grammarAccess.getSessionIntervalAccess().getMessagecontentAssignment_0_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SessionInterval__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_1__0__Impl
	rule__SessionInterval__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getSessionIntervalKeyword_1_0()); }
	'SessionInterval'
	{ after(grammarAccess.getSessionIntervalAccess().getSessionIntervalKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_1__1__Impl
	rule__SessionInterval__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSessionIntervalAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_1__2__Impl
	rule__SessionInterval__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getFrequencyAssignment_1_2()); }
	(rule__SessionInterval__FrequencyAssignment_1_2)
	{ after(grammarAccess.getSessionIntervalAccess().getFrequencyAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_1__3__Impl
	rule__SessionInterval__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getTimeUnitAssignment_1_3()); }
	(rule__SessionInterval__TimeUnitAssignment_1_3)
	{ after(grammarAccess.getSessionIntervalAccess().getTimeUnitAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getSessionIntervalAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SessionInterval__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2__0__Impl
	rule__SessionInterval__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getGroup_2_0()); }
	(rule__SessionInterval__Group_2_0__0)
	{ after(grammarAccess.getSessionIntervalAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getRightParenthesisKeyword_2_1()); }
	')'
	{ after(grammarAccess.getSessionIntervalAccess().getRightParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SessionInterval__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2_0__0__Impl
	rule__SessionInterval__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getSessionIntervalKeyword_2_0_0()); }
	'SessionInterval'
	{ after(grammarAccess.getSessionIntervalAccess().getSessionIntervalKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2_0__1__Impl
	rule__SessionInterval__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getLeftParenthesisKeyword_2_0_1()); }
	'('
	{ after(grammarAccess.getSessionIntervalAccess().getLeftParenthesisKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2_0__2__Impl
	rule__SessionInterval__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getFrequencyAssignment_2_0_2()); }
	(rule__SessionInterval__FrequencyAssignment_2_0_2)
	{ after(grammarAccess.getSessionIntervalAccess().getFrequencyAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2_0__3__Impl
	rule__SessionInterval__Group_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getTimeUnitAssignment_2_0_3()); }
	(rule__SessionInterval__TimeUnitAssignment_2_0_3)
	{ after(grammarAccess.getSessionIntervalAccess().getTimeUnitAssignment_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2_0__4__Impl
	rule__SessionInterval__Group_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getByKeyword_2_0_4()); }
	'by'
	{ after(grammarAccess.getSessionIntervalAccess().getByKeyword_2_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SessionInterval__Group_2_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__Group_2_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSessionIntervalAccess().getValueAssignment_2_0_5()); }
	(rule__SessionInterval__ValueAssignment_2_0_5)
	{ after(grammarAccess.getSessionIntervalAccess().getValueAssignment_2_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timeout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__0__Impl
	rule__Timeout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getTimeoutKeyword_0()); }
	'Timeout'
	{ after(grammarAccess.getTimeoutAccess().getTimeoutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__1__Impl
	rule__Timeout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTimeoutAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__2__Impl
	rule__Timeout__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getValueAssignment_2()); }
	(rule__Timeout__ValueAssignment_2)
	{ after(grammarAccess.getTimeoutAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTimeoutAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxNumberOfOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumberOfOperation__Group__0__Impl
	rule__MaxNumberOfOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberOfOperationAccess().getMaxNumberOfOperationKeyword_0()); }
	'MaxNumberOfOperation'
	{ after(grammarAccess.getMaxNumberOfOperationAccess().getMaxNumberOfOperationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumberOfOperation__Group__1__Impl
	rule__MaxNumberOfOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberOfOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMaxNumberOfOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumberOfOperation__Group__2__Impl
	rule__MaxNumberOfOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberOfOperationAccess().getOperationsNumberAssignment_2()); }
	(rule__MaxNumberOfOperation__OperationsNumberAssignment_2)
	{ after(grammarAccess.getMaxNumberOfOperationAccess().getOperationsNumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumberOfOperation__Group__3__Impl
	rule__MaxNumberOfOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberOfOperationAccess().getByKeyword_3()); }
	'by'
	{ after(grammarAccess.getMaxNumberOfOperationAccess().getByKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumberOfOperation__Group__4__Impl
	rule__MaxNumberOfOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberOfOperationAccess().getTimeUnitAssignment_4()); }
	(rule__MaxNumberOfOperation__TimeUnitAssignment_4)
	{ after(grammarAccess.getMaxNumberOfOperationAccess().getTimeUnitAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxNumberOfOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxNumberOfOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMaxNumberOfOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WeekDaysInterval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekDaysInterval__Group__0__Impl
	rule__WeekDaysInterval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekDaysIntervalAccess().getWeekDaysIntervalKeyword_0()); }
	'WeekDaysInterval'
	{ after(grammarAccess.getWeekDaysIntervalAccess().getWeekDaysIntervalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekDaysInterval__Group__1__Impl
	rule__WeekDaysInterval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekDaysIntervalAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWeekDaysIntervalAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekDaysInterval__Group__2__Impl
	rule__WeekDaysInterval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekDaysIntervalAccess().getStartAssignment_2()); }
	(rule__WeekDaysInterval__StartAssignment_2)
	{ after(grammarAccess.getWeekDaysIntervalAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekDaysInterval__Group__3__Impl
	rule__WeekDaysInterval__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekDaysIntervalAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getWeekDaysIntervalAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekDaysInterval__Group__4__Impl
	rule__WeekDaysInterval__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekDaysIntervalAccess().getEndAssignment_4()); }
	(rule__WeekDaysInterval__EndAssignment_4)
	{ after(grammarAccess.getWeekDaysIntervalAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeekDaysInterval__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeekDaysIntervalAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getWeekDaysIntervalAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageContent__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_0__0__Impl
	rule__MessageContent__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getMessageContentKeyword_0_0()); }
	'MessageContent'
	{ after(grammarAccess.getMessageContentAccess().getMessageContentKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_0__1__Impl
	rule__MessageContent__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_0__2__Impl
	rule__MessageContent__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getContentAssignment_0_2()); }
	(rule__MessageContent__ContentAssignment_0_2)
	{ after(grammarAccess.getMessageContentAccess().getContentAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageContent__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_1__0__Impl
	rule__MessageContent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getMessageContentKeyword_1_0()); }
	'MessageContent'
	{ after(grammarAccess.getMessageContentAccess().getMessageContentKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_1__1__Impl
	rule__MessageContent__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_1__2__Impl
	rule__MessageContent__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getContentAssignment_1_2()); }
	(rule__MessageContent__ContentAssignment_1_2)
	{ after(grammarAccess.getMessageContentAccess().getContentAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_1__3__Impl
	rule__MessageContent__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getByKeyword_1_3()); }
	'by'
	{ after(grammarAccess.getMessageContentAccess().getByKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_1__4__Impl
	rule__MessageContent__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getTimeUnitAssignment_1_4()); }
	(rule__MessageContent__TimeUnitAssignment_1_4)
	{ after(grammarAccess.getMessageContentAccess().getTimeUnitAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageContent__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_2__0__Impl
	rule__MessageContent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getMessageContentKeyword_2_0()); }
	'MessageContent'
	{ after(grammarAccess.getMessageContentAccess().getMessageContentKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_2__1__Impl
	rule__MessageContent__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_2__2__Impl
	rule__MessageContent__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getContentAssignment_2_2()); }
	(rule__MessageContent__ContentAssignment_2_2)
	{ after(grammarAccess.getMessageContentAccess().getContentAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_2__3__Impl
	rule__MessageContent__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getComparisonOperatorAssignment_2_3()); }
	(rule__MessageContent__ComparisonOperatorAssignment_2_3)
	{ after(grammarAccess.getMessageContentAccess().getComparisonOperatorAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_2__4__Impl
	rule__MessageContent__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getValueAssignment_2_4()); }
	(rule__MessageContent__ValueAssignment_2_4)
	{ after(grammarAccess.getMessageContentAccess().getValueAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_2_5()); }
	')'
	{ after(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageContent__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__0__Impl
	rule__MessageContent__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getMessageContentKeyword_3_0()); }
	'MessageContent'
	{ after(grammarAccess.getMessageContentAccess().getMessageContentKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__1__Impl
	rule__MessageContent__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__2__Impl
	rule__MessageContent__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getContentAssignment_3_2()); }
	(rule__MessageContent__ContentAssignment_3_2)
	{ after(grammarAccess.getMessageContentAccess().getContentAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__3__Impl
	rule__MessageContent__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getComparisonOperatorAssignment_3_3()); }
	(rule__MessageContent__ComparisonOperatorAssignment_3_3)
	{ after(grammarAccess.getMessageContentAccess().getComparisonOperatorAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__4__Impl
	rule__MessageContent__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getValueAssignment_3_4()); }
	(rule__MessageContent__ValueAssignment_3_4)
	{ after(grammarAccess.getMessageContentAccess().getValueAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__5__Impl
	rule__MessageContent__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getByKeyword_3_5()); }
	'by'
	{ after(grammarAccess.getMessageContentAccess().getByKeyword_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__6__Impl
	rule__MessageContent__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getTimeUnitAssignment_3_6()); }
	(rule__MessageContent__TimeUnitAssignment_3_6)
	{ after(grammarAccess.getMessageContentAccess().getTimeUnitAssignment_3_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group_3__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group_3__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_3_7()); }
	')'
	{ after(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_3_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConditionConditionParserRuleCall_0_0()); }
		ruleCondition
		{ after(grammarAccess.getModelAccess().getConditionConditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ConditionalExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getModelAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__BeforeSymbolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getBeforeSymbolLogicalOpeartorParserRuleCall_0_0()); }
		ruleLogicalOpeartor
		{ after(grammarAccess.getConditionalExpressionAccess().getBeforeSymbolLogicalOpeartorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ConditionParamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getConditionParamConditionParserRuleCall_3_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionalExpressionAccess().getConditionParamConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ConditionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getConditionConditionParserRuleCall_7_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionalExpressionAccess().getConditionConditionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__AftetrSymbolAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getAftetrSymbolLogicalOpeartorParserRuleCall_9_0()); }
		ruleLogicalOpeartor
		{ after(grammarAccess.getConditionalExpressionAccess().getAftetrSymbolLogicalOpeartorParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOpeartor__SymbolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOpeartorAccess().getSymbolANDKeyword_0_0()); }
		(
			{ before(grammarAccess.getLogicalOpeartorAccess().getSymbolANDKeyword_0_0()); }
			'AND'
			{ after(grammarAccess.getLogicalOpeartorAccess().getSymbolANDKeyword_0_0()); }
		)
		{ after(grammarAccess.getLogicalOpeartorAccess().getSymbolANDKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOpeartor__SymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOpeartorAccess().getSymbolORKeyword_1_0()); }
		(
			{ before(grammarAccess.getLogicalOpeartorAccess().getSymbolORKeyword_1_0()); }
			'OR'
			{ after(grammarAccess.getLogicalOpeartorAccess().getSymbolORKeyword_1_0()); }
		)
		{ after(grammarAccess.getLogicalOpeartorAccess().getSymbolORKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__SymbolAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getSymbolANDKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getCompositeConditionAccess().getSymbolANDKeyword_1_1_0_0()); }
			'AND'
			{ after(grammarAccess.getCompositeConditionAccess().getSymbolANDKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getCompositeConditionAccess().getSymbolANDKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__SymbolAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getSymbolORKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getCompositeConditionAccess().getSymbolORKeyword_1_1_1_0()); }
			'OR'
			{ after(grammarAccess.getCompositeConditionAccess().getSymbolORKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getCompositeConditionAccess().getSymbolORKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getRightNegationParserRuleCall_1_2_0()); }
		ruleNegation
		{ after(grammarAccess.getCompositeConditionAccess().getRightNegationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__SymbolAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getSymbolNOTKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getNegationAccess().getSymbolNOTKeyword_1_1_0()); }
			'NOT'
			{ after(grammarAccess.getNegationAccess().getSymbolNOTKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getNegationAccess().getSymbolNOTKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__ConditionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getConditionTermParserRuleCall_1_2_0()); }
		ruleTerm
		{ after(grammarAccess.getNegationAccess().getConditionTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeIntervalAccess().getStartSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTimeIntervalAccess().getStartSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeInterval__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeIntervalAccess().getEndSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getTimeIntervalAccess().getEndSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__FrequencyAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getFrequencyINTTerminalRuleCall_0_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSessionIntervalAccess().getFrequencyINTTerminalRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__TimeUnitAssignment_0_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getTimeUnitTimeUnitEnumRuleCall_0_0_3_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getSessionIntervalAccess().getTimeUnitTimeUnitEnumRuleCall_0_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__MessagecontentAssignment_0_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getMessagecontentMessageContentParserRuleCall_0_0_5_0()); }
		ruleMessageContent
		{ after(grammarAccess.getSessionIntervalAccess().getMessagecontentMessageContentParserRuleCall_0_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__FrequencyAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getFrequencyINTTerminalRuleCall_1_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSessionIntervalAccess().getFrequencyINTTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__TimeUnitAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getTimeUnitTimeUnitEnumRuleCall_1_3_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getSessionIntervalAccess().getTimeUnitTimeUnitEnumRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__FrequencyAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getFrequencyINTTerminalRuleCall_2_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSessionIntervalAccess().getFrequencyINTTerminalRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__TimeUnitAssignment_2_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getTimeUnitTimeUnitEnumRuleCall_2_0_3_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getSessionIntervalAccess().getTimeUnitTimeUnitEnumRuleCall_2_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SessionInterval__ValueAssignment_2_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSessionIntervalAccess().getValueSTRINGTerminalRuleCall_2_0_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getSessionIntervalAccess().getValueSTRINGTerminalRuleCall_2_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTimeoutAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__OperationsNumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxNumberOfOperationAccess().getOperationsNumberINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getMaxNumberOfOperationAccess().getOperationsNumberINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxNumberOfOperation__TimeUnitAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxNumberOfOperationAccess().getTimeUnitTimeUnitEnumRuleCall_4_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getMaxNumberOfOperationAccess().getTimeUnitTimeUnitEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeekDaysIntervalAccess().getStartWeekDayEnumRuleCall_2_0()); }
		ruleWeekDay
		{ after(grammarAccess.getWeekDaysIntervalAccess().getStartWeekDayEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDaysInterval__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeekDaysIntervalAccess().getEndWeekDayEnumRuleCall_4_0()); }
		ruleWeekDay
		{ after(grammarAccess.getWeekDaysIntervalAccess().getEndWeekDayEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ContentAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ContentAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__TimeUnitAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getTimeUnitTimeUnitEnumRuleCall_1_4_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getMessageContentAccess().getTimeUnitTimeUnitEnumRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ContentAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_2_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ComparisonOperatorAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getComparisonOperatorComparisonOperatorParserRuleCall_2_3_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getMessageContentAccess().getComparisonOperatorComparisonOperatorParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ValueAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getValueSTRINGTerminalRuleCall_2_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageContentAccess().getValueSTRINGTerminalRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ContentAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ComparisonOperatorAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getComparisonOperatorComparisonOperatorParserRuleCall_3_3_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getMessageContentAccess().getComparisonOperatorComparisonOperatorParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ValueAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getValueSTRINGTerminalRuleCall_3_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageContentAccess().getValueSTRINGTerminalRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__TimeUnitAssignment_3_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getTimeUnitTimeUnitEnumRuleCall_3_6_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getMessageContentAccess().getTimeUnitTimeUnitEnumRuleCall_3_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__SymbolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignEqualsSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignEqualsSignKeyword_0_0()); }
			'<='
			{ after(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignEqualsSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignEqualsSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__SymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0()); }
			'>='
			{ after(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__SymbolAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignKeyword_2_0()); }
		(
			{ before(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignKeyword_2_0()); }
			'>'
			{ after(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignKeyword_2_0()); }
		)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolGreaterThanSignKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__SymbolAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignKeyword_3_0()); }
		(
			{ before(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignKeyword_3_0()); }
			'<'
			{ after(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignKeyword_3_0()); }
		)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolLessThanSignKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__SymbolAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolExclamationMarkEqualsSignKeyword_4_0()); }
		(
			{ before(grammarAccess.getComparisonOperatorAccess().getSymbolExclamationMarkEqualsSignKeyword_4_0()); }
			'!='
			{ after(grammarAccess.getComparisonOperatorAccess().getSymbolExclamationMarkEqualsSignKeyword_4_0()); }
		)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolExclamationMarkEqualsSignKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__SymbolAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getSymbolEqualsSignEqualsSignKeyword_5_0()); }
		(
			{ before(grammarAccess.getComparisonOperatorAccess().getSymbolEqualsSignEqualsSignKeyword_5_0()); }
			'=='
			{ after(grammarAccess.getComparisonOperatorAccess().getSymbolEqualsSignEqualsSignKeyword_5_0()); }
		)
		{ after(grammarAccess.getComparisonOperatorAccess().getSymbolEqualsSignEqualsSignKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
