/**
 * generated by Xtext 2.28.0
 */
package zbr.test.condition.condition;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Conditional Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link zbr.test.condition.condition.ConditionalExpression#getConditionParam <em>Condition Param</em>}</li>
 *   <li>{@link zbr.test.condition.condition.ConditionalExpression#getCondition <em>Condition</em>}</li>
 *   <li>{@link zbr.test.condition.condition.ConditionalExpression#getAftetrSymbol <em>Aftetr Symbol</em>}</li>
 *   <li>{@link zbr.test.condition.condition.ConditionalExpression#getBeforeSymbol <em>Before Symbol</em>}</li>
 * </ul>
 *
 * @see zbr.test.condition.condition.ConditionPackage#getConditionalExpression()
 * @model
 * @generated
 */
public interface ConditionalExpression extends EObject
{
	/**
	 * Returns the value of the '<em><b>Condition Param</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Condition Param</em>' containment reference.
	 * @see #setConditionParam(Condition)
	 * @see zbr.test.condition.condition.ConditionPackage#getConditionalExpression_ConditionParam()
	 * @model containment="true"
	 * @generated
	 */
	Condition getConditionParam();

	/**
	 * Sets the value of the '{@link zbr.test.condition.condition.ConditionalExpression#getConditionParam <em>Condition Param</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Condition Param</em>' containment reference.
	 * @see #getConditionParam()
	 * @generated
	 */
	void setConditionParam(Condition value);

	/**
	 * Returns the value of the '<em><b>Condition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Condition</em>' containment reference.
	 * @see #setCondition(Condition)
	 * @see zbr.test.condition.condition.ConditionPackage#getConditionalExpression_Condition()
	 * @model containment="true"
	 * @generated
	 */
	Condition getCondition();

	/**
	 * Sets the value of the '{@link zbr.test.condition.condition.ConditionalExpression#getCondition <em>Condition</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Condition</em>' containment reference.
	 * @see #getCondition()
	 * @generated
	 */
	void setCondition(Condition value);

	/**
	 * Returns the value of the '<em><b>Aftetr Symbol</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Aftetr Symbol</em>' containment reference.
	 * @see #setAftetrSymbol(LogicalOpeartor)
	 * @see zbr.test.condition.condition.ConditionPackage#getConditionalExpression_AftetrSymbol()
	 * @model containment="true"
	 * @generated
	 */
	LogicalOpeartor getAftetrSymbol();

	/**
	 * Sets the value of the '{@link zbr.test.condition.condition.ConditionalExpression#getAftetrSymbol <em>Aftetr Symbol</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Aftetr Symbol</em>' containment reference.
	 * @see #getAftetrSymbol()
	 * @generated
	 */
	void setAftetrSymbol(LogicalOpeartor value);

	/**
	 * Returns the value of the '<em><b>Before Symbol</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Before Symbol</em>' containment reference.
	 * @see #setBeforeSymbol(LogicalOpeartor)
	 * @see zbr.test.condition.condition.ConditionPackage#getConditionalExpression_BeforeSymbol()
	 * @model containment="true"
	 * @generated
	 */
	LogicalOpeartor getBeforeSymbol();

	/**
	 * Sets the value of the '{@link zbr.test.condition.condition.ConditionalExpression#getBeforeSymbol <em>Before Symbol</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Before Symbol</em>' containment reference.
	 * @see #getBeforeSymbol()
	 * @generated
	 */
	void setBeforeSymbol(LogicalOpeartor value);

} // ConditionalExpression
