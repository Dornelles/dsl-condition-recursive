/**
 * generated by Xtext 2.28.0
 */
package zbr.test.condition.condition;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Unary Term Operator</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link zbr.test.condition.condition.UnaryTermOperator#getSymbol <em>Symbol</em>}</li>
 *   <li>{@link zbr.test.condition.condition.UnaryTermOperator#getCondition <em>Condition</em>}</li>
 * </ul>
 *
 * @see zbr.test.condition.condition.ConditionPackage#getUnaryTermOperator()
 * @model
 * @generated
 */
public interface UnaryTermOperator extends Condition
{
	/**
	 * Returns the value of the '<em><b>Symbol</b></em>' attribute.
	 * The default value is <code>"EString"</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Symbol</em>' attribute.
	 * @see #setSymbol(String)
	 * @see zbr.test.condition.condition.ConditionPackage#getUnaryTermOperator_Symbol()
	 * @model default="EString"
	 * @generated
	 */
	String getSymbol();

	/**
	 * Sets the value of the '{@link zbr.test.condition.condition.UnaryTermOperator#getSymbol <em>Symbol</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Symbol</em>' attribute.
	 * @see #getSymbol()
	 * @generated
	 */
	void setSymbol(String value);

	/**
	 * Returns the value of the '<em><b>Condition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Condition</em>' containment reference.
	 * @see #setCondition(Condition)
	 * @see zbr.test.condition.condition.ConditionPackage#getUnaryTermOperator_Condition()
	 * @model containment="true"
	 * @generated
	 */
	Condition getCondition();

	/**
	 * Sets the value of the '{@link zbr.test.condition.condition.UnaryTermOperator#getCondition <em>Condition</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Condition</em>' containment reference.
	 * @see #getCondition()
	 * @generated
	 */
	void setCondition(Condition value);

} // UnaryTermOperator
