/**
 * generated by Xtext 2.28.0
 */
package zbr.test.condition.condition.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import zbr.test.condition.condition.ComparisonOperator;
import zbr.test.condition.condition.ConditionPackage;
import zbr.test.condition.condition.MessageContent;
import zbr.test.condition.condition.TimeUnit;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Message Content</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link zbr.test.condition.condition.impl.MessageContentImpl#getContent <em>Content</em>}</li>
 *   <li>{@link zbr.test.condition.condition.impl.MessageContentImpl#getTimeUnit <em>Time Unit</em>}</li>
 *   <li>{@link zbr.test.condition.condition.impl.MessageContentImpl#getValue <em>Value</em>}</li>
 *   <li>{@link zbr.test.condition.condition.impl.MessageContentImpl#getComparisonOperator <em>Comparison Operator</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MessageContentImpl extends TermImpl implements MessageContent
{
	/**
	 * The default value of the '{@link #getContent() <em>Content</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getContent()
	 * @generated
	 * @ordered
	 */
	protected static final String CONTENT_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getContent() <em>Content</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getContent()
	 * @generated
	 * @ordered
	 */
	protected String content = CONTENT_EDEFAULT;

	/**
	 * The default value of the '{@link #getTimeUnit() <em>Time Unit</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTimeUnit()
	 * @generated
	 * @ordered
	 */
	protected static final TimeUnit TIME_UNIT_EDEFAULT = TimeUnit.SECOND;

	/**
	 * The cached value of the '{@link #getTimeUnit() <em>Time Unit</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTimeUnit()
	 * @generated
	 * @ordered
	 */
	protected TimeUnit timeUnit = TIME_UNIT_EDEFAULT;

	/**
	 * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getValue()
	 * @generated
	 * @ordered
	 */
	protected static final String VALUE_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getValue()
	 * @generated
	 * @ordered
	 */
	protected String value = VALUE_EDEFAULT;

	/**
	 * The cached value of the '{@link #getComparisonOperator() <em>Comparison Operator</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getComparisonOperator()
	 * @generated
	 * @ordered
	 */
	protected ComparisonOperator comparisonOperator;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageContentImpl()
	{
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass()
	{
		return ConditionPackage.Literals.MESSAGE_CONTENT;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getContent()
	{
		return content;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setContent(String newContent)
	{
		String oldContent = content;
		content = newContent;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ConditionPackage.MESSAGE_CONTENT__CONTENT, oldContent, content));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public TimeUnit getTimeUnit()
	{
		return timeUnit;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setTimeUnit(TimeUnit newTimeUnit)
	{
		TimeUnit oldTimeUnit = timeUnit;
		timeUnit = newTimeUnit == null ? TIME_UNIT_EDEFAULT : newTimeUnit;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ConditionPackage.MESSAGE_CONTENT__TIME_UNIT, oldTimeUnit, timeUnit));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getValue()
	{
		return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setValue(String newValue)
	{
		String oldValue = value;
		value = newValue;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ConditionPackage.MESSAGE_CONTENT__VALUE, oldValue, value));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComparisonOperator getComparisonOperator()
	{
		return comparisonOperator;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetComparisonOperator(ComparisonOperator newComparisonOperator, NotificationChain msgs)
	{
		ComparisonOperator oldComparisonOperator = comparisonOperator;
		comparisonOperator = newComparisonOperator;
		if (eNotificationRequired())
		{
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR, oldComparisonOperator, newComparisonOperator);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setComparisonOperator(ComparisonOperator newComparisonOperator)
	{
		if (newComparisonOperator != comparisonOperator)
		{
			NotificationChain msgs = null;
			if (comparisonOperator != null)
				msgs = ((InternalEObject)comparisonOperator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR, null, msgs);
			if (newComparisonOperator != null)
				msgs = ((InternalEObject)newComparisonOperator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR, null, msgs);
			msgs = basicSetComparisonOperator(newComparisonOperator, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR, newComparisonOperator, newComparisonOperator));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
	{
		switch (featureID)
		{
			case ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR:
				return basicSetComparisonOperator(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType)
	{
		switch (featureID)
		{
			case ConditionPackage.MESSAGE_CONTENT__CONTENT:
				return getContent();
			case ConditionPackage.MESSAGE_CONTENT__TIME_UNIT:
				return getTimeUnit();
			case ConditionPackage.MESSAGE_CONTENT__VALUE:
				return getValue();
			case ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR:
				return getComparisonOperator();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue)
	{
		switch (featureID)
		{
			case ConditionPackage.MESSAGE_CONTENT__CONTENT:
				setContent((String)newValue);
				return;
			case ConditionPackage.MESSAGE_CONTENT__TIME_UNIT:
				setTimeUnit((TimeUnit)newValue);
				return;
			case ConditionPackage.MESSAGE_CONTENT__VALUE:
				setValue((String)newValue);
				return;
			case ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR:
				setComparisonOperator((ComparisonOperator)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID)
	{
		switch (featureID)
		{
			case ConditionPackage.MESSAGE_CONTENT__CONTENT:
				setContent(CONTENT_EDEFAULT);
				return;
			case ConditionPackage.MESSAGE_CONTENT__TIME_UNIT:
				setTimeUnit(TIME_UNIT_EDEFAULT);
				return;
			case ConditionPackage.MESSAGE_CONTENT__VALUE:
				setValue(VALUE_EDEFAULT);
				return;
			case ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR:
				setComparisonOperator((ComparisonOperator)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID)
	{
		switch (featureID)
		{
			case ConditionPackage.MESSAGE_CONTENT__CONTENT:
				return CONTENT_EDEFAULT == null ? content != null : !CONTENT_EDEFAULT.equals(content);
			case ConditionPackage.MESSAGE_CONTENT__TIME_UNIT:
				return timeUnit != TIME_UNIT_EDEFAULT;
			case ConditionPackage.MESSAGE_CONTENT__VALUE:
				return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
			case ConditionPackage.MESSAGE_CONTENT__COMPARISON_OPERATOR:
				return comparisonOperator != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString()
	{
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (content: ");
		result.append(content);
		result.append(", timeUnit: ");
		result.append(timeUnit);
		result.append(", value: ");
		result.append(value);
		result.append(')');
		return result.toString();
	}

} //MessageContentImpl
